{"ast":null,"code":"var _jsxFileName = \"/home/dark/office/Main/BiCellReact/src/Components/AppToolbar.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Avatar, Badge, Button, ClickAwayListener, Grow, IconButton, makeStyles, Paper, Popper } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { SessionManager } from \"../Others/SessionManager\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { useOvermind } from \"../Others/OvermindHelper\";\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 13,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px'\n  }\n}))(Badge);\nconst useStyles = makeStyles(theme => ({\n  header: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    minHeight: 50\n  },\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst AppToolbar = () => {\n  const {\n    state,\n    actions\n  } = useOvermind();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    console.log(event.name);\n\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      console.log(event.target);\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"loggedAppToolbar\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AppToolbar;","map":{"version":3,"sources":["/home/dark/office/Main/BiCellReact/src/Components/AppToolbar.js"],"names":["React","BrowserRouter","Router","Link","AppBar","Toolbar","Grid","Avatar","Badge","Button","ClickAwayListener","Grow","IconButton","makeStyles","Paper","Popper","MenuIcon","MenuList","MenuItem","SessionManager","withStyles","ShoppingCartIcon","useOvermind","StyledBadge","theme","badge","right","top","border","palette","background","paper","padding","useStyles","header","minHeight","root","flexGrow","spacing","textAlign","color","text","secondary","menuButton","marginRight","AppToolbar","state","actions","classes","open","setOpen","useState","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","console","log","name","current","contains","target","handleListKeyDown","key","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BrowserRouter as Router, Link} from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Avatar, Badge, Button, ClickAwayListener, Grow, IconButton, makeStyles, Paper, Popper} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {SessionManager} from \"../Others/SessionManager\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport {useOvermind} from \"../Others/OvermindHelper\";\n\n\nconst StyledBadge = withStyles((theme) => ({\n    badge: {\n        right: -3,\n        top: 13,\n        border: `2px solid ${theme.palette.background.paper}`,\n        padding: '0 4px',\n    },\n}))(Badge);\n\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        minHeight: 50,\n\n    },\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n}));\n\n\nconst AppToolbar = () => {\n    const {state, actions} = useOvermind();\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        console.log(event.name)\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            console.log(event.target);\n            return;\n        }\n\n        setOpen(false);\n    };\n\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    return (\n        <div>\n        {/*    {SessionManager.getAccessToken() === '' ?*/}\n        {/*    <AppBar elevation={500} position=\"static\" className={classes.header}>*/}\n        {/*        <Toolbar variant=\"dense\">*/}\n        {/*            <Grid container spacing={0}>*/}\n        {/*                <Grid item xs={6}>*/}\n        {/*                    <Button>*/}\n        {/*                        Bi-cell*/}\n        {/*                    </Button>*/}\n\n        {/*                </Grid>*/}\n        {/*                <Grid item xs={1}>*/}\n        {/*                    <Button fullWidth={1} component={Link} to='/top'>*/}\n        {/*                        top*/}\n        {/*                    </Button>*/}\n        {/*                </Grid>*/}\n        {/*                <Grid item xs={1}>*/}\n        {/*                    <Button fullWidth={1}>Shops</Button>*/}\n\n        {/*                </Grid>*/}\n        {/*                <Grid item xs={1}>*/}\n        {/*                    <Button fullWidth={1}> Categories</Button>*/}\n        {/*                </Grid>*/}\n\n        {/*                <Grid item xs={3} container spacing={3}>*/}\n\n        {/*                    <Grid item xs={6}>*/}\n        {/*                        <Button fullWidth={1}> Notification</Button>*/}\n        {/*                    </Grid>*/}\n\n        {/*                    <Grid item xs={6}>*/}\n\n        {/*                        <div>*/}\n        {/*                            <Button*/}\n        {/*                                fullWidth={1}*/}\n        {/*                                ref={anchorRef}*/}\n        {/*                                aria-controls={open ? 'menu-list-grow' : undefined}*/}\n        {/*                                aria-haspopup=\"true\"*/}\n        {/*                                onClick={handleToggle}*/}\n        {/*                            >*/}\n        {/*                                <MenuIcon/>*/}\n        {/*                            </Button>*/}\n        {/*                            <Popper elevation={100} open={open} anchorEl={anchorRef.current} role={undefined}*/}\n        {/*                                    transition*/}\n        {/*                                    disablePortal>*/}\n        {/*                                {({TransitionProps, placement}) => (*/}\n        {/*                                    <Grow*/}\n        {/*                                        {...TransitionProps}*/}\n        {/*                                        style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}*/}\n        {/*                                    >*/}\n        {/*                                        <Paper elevation={100}>*/}\n        {/*                                            <ClickAwayListener onClickAway={handleClose}>*/}\n        {/*                                                <MenuList autoFocusItem={open} id=\"menu-list-grow\"*/}\n        {/*                                                          onKeyDown={handleListKeyDown}>*/}\n        {/*                                                    <MenuItem onClick={handleClose}>Profile</MenuItem>*/}\n        {/*                                                    <MenuItem onClick={handleClose}>My account</MenuItem>*/}\n\n        {/*                                                    <MenuItem component={Link} to={\"/login\"}*/}\n        {/*                                                              onClick={handleClose}>Sign in</MenuItem>*/}\n        {/*                                                </MenuList>*/}\n        {/*                                            </ClickAwayListener>*/}\n        {/*                                        </Paper>*/}\n        {/*                                    </Grow>*/}\n        {/*                                )}*/}\n        {/*                            </Popper>*/}\n        {/*                        </div>*/}\n        {/*                    </Grid>*/}\n        {/*                </Grid>*/}\n\n\n        {/*            </Grid>*/}\n        {/*        </Toolbar>*/}\n        {/*    </AppBar>*/}\n        {/*    : */}\n        {/*}*/}\n            <loggedAppToolbar/>\n        </div>\n\n\n    );\n}\n\nexport default AppToolbar;\n"]},"metadata":{},"sourceType":"module"}