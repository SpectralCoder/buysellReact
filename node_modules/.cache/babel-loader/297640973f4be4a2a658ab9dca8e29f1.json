{"ast":null,"code":"var _jsxFileName = \"/home/dark/office/Main/BiCellReact/src/Components/CartDesign.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Box, ButtonBase, IconButton, makeStyles, Paper, TextField } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Logics } from \"../Others/Logics\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport { NodeFetchHelper } from \"../Others/NodeFetchHelper\";\nimport { SessionManager } from \"../Others/SessionManager\";\nimport io from \"socket.io-client\";\nconst socENDPOINT = 'http://localhost:2000/socket';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    Width: 500,\n    Height: 100\n  },\n  image: {\n    width: 100,\n    height: 100\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  indiPaper: {\n    Width: 500,\n    Height: 150\n  }\n}));\n\nconst CartDesign = () => {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n  const [arrCart, setCart] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  useEffect(() => {\n    Logics.getCart(setCart);\n  }, []);\n  const paperStyle = {\n    padding: 10,\n    height: '80vh',\n    width: '76vh'\n  };\n  const boxStyle = {\n    height: '60vh',\n    width: '76vh'\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 2,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 10,\n    style: paperStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    align: \"center\",\n    style: {\n      backgroundColor: '#4caf50'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Cart\"), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: boxStyle,\n    overflow: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, arrCart.map((item, index) => {\n    {\n      if (totalAmount == 0) {\n        Logics.getCartTotalAmount(arrCart, setTotalAmount);\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 15,\n      className: classes.indiPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ButtonBase, {\n      className: classes.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.img,\n      alt: \"complex\",\n      src: item.products.picture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 65\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      xs: 6,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 65\n      }\n    }, item.products.name)), /*#__PURE__*/React.createElement(Grid, {\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      xs: 3,\n      alignContent: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 65\n      }\n    }, \"Remove\"))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 65\n      }\n    }, \"Price:\", item.products.price * item.count)), /*#__PURE__*/React.createElement(Grid, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"minus\",\n      onClick: () => {\n        item.count--;\n        setCount(count - 1);\n\n        if (item.count < 1) {\n          item.count = 1;\n          setCount(1);\n        }\n\n        Logics.getCartTotalAmount(arrCart, setTotalAmount);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(IndeterminateCheckBoxOutlinedIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 69\n      }\n    })), item.count, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"plus\",\n      onClick: () => {\n        item.count++;\n        setCount(count + 1);\n        Logics.getCartTotalAmount(arrCart, setTotalAmount);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(AddBoxOutlinedIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 69\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 61\n      }\n    }, \"Buy\")))));\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"Total\"), totalAmount), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => NodeFetchHelper.post(`http://localhost:2000/orders/`, null, {\n      Authorization: 'Bearer ' + SessionManager.getAccessToken()\n    }, {\n      products: arrCart[0].products,\n      Buyer: SessionManager.getUserId()\n    }, function (statusCode, jsonData, ok) {\n      if (statusCode >= 400) {\n        console.log(\"sorry, can't put in\");\n      } else {\n        let socket = io(socENDPOINT);\n        socket.emit('notification', {}, error => {\n          if (error) {\n            alert(error);\n          }\n        });\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Checkout\")))));\n};\n\nexport default CartDesign;","map":{"version":3,"sources":["/home/dark/office/Main/BiCellReact/src/Components/CartDesign.js"],"names":["React","useEffect","useState","Box","ButtonBase","IconButton","makeStyles","Paper","TextField","Grid","Logics","Typography","Button","IndeterminateCheckBoxOutlinedIcon","AddBoxOutlinedIcon","NodeFetchHelper","SessionManager","io","socENDPOINT","useStyles","theme","root","flexGrow","paper","padding","spacing","Width","Height","image","width","height","img","margin","display","maxWidth","maxHeight","indiPaper","CartDesign","classes","count","setCount","arrCart","setCart","totalAmount","setTotalAmount","getCart","paperStyle","boxStyle","backgroundColor","map","item","index","getCartTotalAmount","products","picture","name","price","post","Authorization","getAccessToken","Buyer","getUserId","statusCode","jsonData","ok","console","log","socket","emit","error","alert"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Box, ButtonBase, IconButton, makeStyles, Paper, TextField} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Logics} from \"../Others/Logics\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport {NodeFetchHelper} from \"../Others/NodeFetchHelper\";\nimport {SessionManager} from \"../Others/SessionManager\";\nimport io from \"socket.io-client\";\n\nconst socENDPOINT = 'http://localhost:2000/socket';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n\n        Width: 500,\n        Height: 100,\n    },\n    image: {\n        width: 100,\n        height: 100,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    indiPaper: {\n        Width: 500,\n        Height: 150,\n\n    },\n}));\n\n\nconst CartDesign = () => {\n    const classes = useStyles();\n    const [count, setCount] = useState(0)\n\n    const [arrCart, setCart] = useState([])\n\n    const [totalAmount, setTotalAmount] = useState(0)\n\n    useEffect(() => {\n        Logics.getCart(setCart)\n    }, []);\n    const paperStyle = {\n        padding: 10,\n        height: '80vh', width: '76vh',\n\n    }\n    const boxStyle = {\n        height: '60vh', width: '76vh',\n    }\n\n    return (\n        <Grid container>\n            <Grid xs={2} sm={2}>\n                <Paper elevation={10} style={paperStyle}>\n                    <Grid align='center' style={{backgroundColor: '#4caf50'}}>\n                        Cart\n                    </Grid>\n                    <Grid>\n                        <Box style={boxStyle} overflow=\"auto\">\n                            {/*<Paper className={classes.paper} elevation={15}>*/}\n\n\n                            <Grid container direction='column'>\n                                {\n                                    arrCart.map((item, index) => {\n                                        {\n                                            if (totalAmount == 0) {\n                                                Logics.getCartTotalAmount(arrCart, setTotalAmount)\n\n                                            }\n                                        }\n                                        return (\n                                            <div className={classes.root}>\n                                                <Paper elevation={15} className={classes.indiPaper}>\n                                                    <Grid container>\n                                                        <Grid item xs={3} sm={3}>\n                                                            <ButtonBase className={classes.image}>\n                                                                <img className={classes.img} alt=\"complex\"\n                                                                     src={item.products.picture}/>\n                                                            </ButtonBase>\n                                                        </Grid>\n                                                        <Grid container xs={6} direction='column'>\n                                                            <Grid xs={3}>\n                                                                <Typography gutterBottom variant=\"subtitle1\">\n                                                                    {item.products.name}\n\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid xs={3}>\n                                                                <Typography gutterBottom variant=\"subtitle1\">\n                                                                    {/*{item.products.shop}*/}\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid xs={3} alignContent={'center'}>\n                                                                <Button color=\"secondary\">Remove</Button>\n                                                            </Grid>\n\n                                                        </Grid>\n                                                        <Grid container direction='column' xs={3}>\n                                                            <Grid align='center'>\n                                                                <Typography gutterBottom variant=\"subtitle1\">\n                                                                    Price:{item.products.price * item.count}\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid align='center'>\n                                                                <IconButton aria-label=\"minus\" onClick={() => {\n\n                                                                    item.count--;\n                                                                    setCount(count - 1)\n                                                                    if (item.count < 1) {\n                                                                        item.count = 1\n                                                                        setCount(1)\n                                                                    }\n                                                                    Logics.getCartTotalAmount(arrCart, setTotalAmount)\n\n\n                                                                }}>\n                                                                    <IndeterminateCheckBoxOutlinedIcon\n                                                                        fontSize=\"small\"/>\n                                                                </IconButton>\n\n                                                                {item.count}\n                                                                <IconButton aria-label=\"plus\" onClick={() => {\n                                                                    item.count++;\n                                                                    setCount(count + 1)\n                                                                    Logics.getCartTotalAmount(arrCart, setTotalAmount)\n                                                                }}>\n                                                                    <AddBoxOutlinedIcon fontSize=\"small\"/>\n                                                                </IconButton>\n\n\n                                                            </Grid>\n                                                            <Grid align='center'>\n                                                                Buy\n                                                            </Grid>\n\n                                                        </Grid>\n                                                    </Grid>\n                                                </Paper>\n\n\n                                            </div>\n\n                                        )\n\n                                    })\n                                }\n\n\n                            </Grid>\n\n                            {/*</Paper>*/}\n                        </Box>\n                    </Grid>\n                    <Grid>\n                        <Typography gutterBottom variant=\"subtitle1\">\n                            Total\n                        </Typography>\n\n                        {totalAmount}\n\n                    </Grid>\n                    <Grid>\n                        <Button onClick={() => NodeFetchHelper.post(`http://localhost:2000/orders/`, null,\n                            {Authorization: 'Bearer ' + SessionManager.getAccessToken()}\n                            ,\n                            {\n                                products: arrCart[0].products,\n                                Buyer: SessionManager.getUserId()\n                            }, function (statusCode, jsonData, ok) {\n                                if (statusCode >= 400) {\n                                    console.log(\"sorry, can't put in\")\n\n                                } else {\n                                   let socket = io(socENDPOINT);\n                                    socket.emit('notification', {  }, (error) => {\n                                        if(error) {\n                                            alert(error);\n                                        }\n                                    });\n                                }\n                            })}>\n                            Checkout\n                        </Button>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n\n    );\n}\n\nexport default CartDesign;"]},"metadata":{},"sourceType":"module"}