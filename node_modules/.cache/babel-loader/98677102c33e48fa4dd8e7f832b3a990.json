{"ast":null,"code":"var _jsxFileName = \"/home/dark/office/Main/BiCellReact/src/AppToolbar/AppToolbar.js\";\nimport React, { useEffect } from 'react';\nimport { SessionManager } from \"../Others/SessionManager\";\nimport LoggedAppToolbar from \"./LoggedAppToolbar\";\nimport NotLoggedAppToolbar from \"./NotLoggedAppToolbar\";\nimport { Logics } from \"../Others/Logics\";\nimport PendingAppToolbar from \"./PendingAppToolbar\";\n\nconst AppToolbar = () => {\n  const [roles, setRoles] = React.useState('');\n  useEffect(() => {\n    Logics.getRoles(setRoles);\n  }, []);\n\n  const New = () => {\n    console.log(\"Hello\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, SessionManager.getAccessToken() === '' ? /*#__PURE__*/React.createElement(NotLoggedAppToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }) : New(), \"roles === 'pending'? \", /*#__PURE__*/React.createElement(PendingAppToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }\n  }), \" : \", /*#__PURE__*/React.createElement(LoggedAppToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 61\n    }\n  }), \"}\");\n};\n\nexport default AppToolbar;","map":{"version":3,"sources":["/home/dark/office/Main/BiCellReact/src/AppToolbar/AppToolbar.js"],"names":["React","useEffect","SessionManager","LoggedAppToolbar","NotLoggedAppToolbar","Logics","PendingAppToolbar","AppToolbar","roles","setRoles","useState","getRoles","New","console","log","getAccessToken"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACM,QAAP,CAAgBF,QAAhB;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,GAAG,GAAE,MAAM;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAFD;;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,cAAc,CAACa,cAAf,OAAoC,EAApC,gBACG,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGKH,GAAG,EAJb,wCAM6B,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN7B,sBAMoD,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANpD,MADJ;AAcH,CAxBD;;AA0BA,eAAeL,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {SessionManager} from \"../Others/SessionManager\";\nimport LoggedAppToolbar from \"./LoggedAppToolbar\";\nimport NotLoggedAppToolbar from \"./NotLoggedAppToolbar\";\nimport {Logics} from \"../Others/Logics\";\nimport PendingAppToolbar from \"./PendingAppToolbar\";\n\n\nconst AppToolbar = () => {\n\n    const [roles, setRoles] = React.useState('');\n    useEffect(() => {\n        Logics.getRoles(setRoles)\n    }, []);\n\n    const New =() => {\n        console.log(\"Hello\");\n    }\n    return (\n        <div>\n            {SessionManager.getAccessToken() === '' ?\n                <NotLoggedAppToolbar/>\n\n                : New()}\n\n                roles === 'pending'? <PendingAppToolbar/> : <LoggedAppToolbar/>}\n\n\n        </div>\n\n\n    );\n}\n\nexport default AppToolbar;\n"]},"metadata":{},"sourceType":"module"}