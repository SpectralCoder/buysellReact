{"ast":null,"code":"import { NodeFetchHelper } from \"./NodeFetchHelper\";\nimport { SessionManager } from \"./SessionManager\";\nconst user_endpoint = 'localhost:2000/users/';\nconst product_endpoint = 'http://localhost:2000/products/categories';\nconst page_product_endpoint = 'http://localhost:2000/products/allData/categories';\nconst product_top = 'http://localhost:2000/orders/top';\nconst cart = 'http://localhost:2000/carts/byid';\nexport class Logics {\n  static getUser(setUser) {\n    NodeFetchHelper.get(user_endpoint, null, {\n      Authorization: \"Bearer \" + SessionManager.getAccessToken()\n    }, (status, jsonData, ok) => {\n      setUser(jsonData);\n    });\n  }\n\n  static getProduct(categories, setProduct) {\n    NodeFetchHelper.get(product_endpoint, {\n      categories\n    }, {\n      Authorization: 'Bearer ' + SessionManager.getAccessToken()\n    }, (status, jsonData, ok) => {\n      if (ok) {\n        setProduct(jsonData);\n      }\n    });\n  }\n\n  static getPaginatedProduct(categories, page, setProduct, setTotal) {\n    const limit = 4;\n    const skip = (page - 1) * limit;\n    console.log(limit);\n    console.log(skip);\n    NodeFetchHelper.get(page_product_endpoint, {\n      categories,\n      skip,\n      limit\n    }, {\n      Authorization: 'Bearer ' + SessionManager.getAccessToken()\n    }, (status, jsonData, ok) => {\n      console.log(jsonData);\n\n      if (ok) {\n        setProduct(jsonData[0].edges);\n        setTotal(Math.floor(jsonData[0].pageInfo[0].count / limit) + 1);\n      }\n    });\n  } // static getTopProduct(categories, setProduct) {\n  //     NodeFetchHelper.get(product_top, {categories}, {\n  //         Authorization: 'Bearer ' + SessionManager.getAccessToken()\n  //     }, (status, jsonData, ok) => {\n  //         console.log(jsonData)\n  //         if (ok) {\n  //             setProduct(jsonData)\n  //         }\n  //     })\n  // }\n\n\n  static getTopProduct(categories, setProduct) {\n    axios.get(`http://localhost:2000/orders/top/${categories}`, {\n      headers: {\n        Authorization: 'Bearer ' + Session.getAccessToken()\n      }\n    }).then(response => {\n      setType(response.data.type);\n      setSenderName(response.data.sender_name);\n      setSenderEmail(response.data.sender_email);\n      setStatus(response.data.status);\n      setAmount(response.data.amount);\n      setBalance(response.data.user.balance);\n      setDate(response.data.createdAt);\n      console.log('hello');\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  static getCartCount(callback) {\n    let id = SessionManager.getUserId();\n    NodeFetchHelper.get(cart, {\n      id\n    }, {\n      Authorization: 'Bearer ' + SessionManager.getAccessToken()\n    }, (status, jsonData, ok) => {\n      console.log(\"after calling cart\", jsonData.length);\n      callback(jsonData.length);\n    });\n  }\n\n  static getCart(setCart) {\n    let id = SessionManager.getUserId();\n    NodeFetchHelper.get(cart, {\n      id\n    }, {\n      Authorization: 'Bearer ' + SessionManager.getAccessToken()\n    }, (status, jsonData, ok) => {\n      if (ok) {\n        console.log(\"CArtdata\", jsonData);\n        setCart(jsonData);\n      }\n    });\n  }\n\n  static getCartTotalAmount(arrCart, setTotalAmount) {\n    let count = 0;\n    arrCart.map((item, index) => {\n      count = count + item.products.price * item.count;\n    });\n    setTotalAmount(count);\n  }\n\n}","map":{"version":3,"sources":["/home/dark/office/Main/BiCellReact/src/Others/Logics.js"],"names":["NodeFetchHelper","SessionManager","user_endpoint","product_endpoint","page_product_endpoint","product_top","cart","Logics","getUser","setUser","get","Authorization","getAccessToken","status","jsonData","ok","getProduct","categories","setProduct","getPaginatedProduct","page","setTotal","limit","skip","console","log","edges","Math","floor","pageInfo","count","getTopProduct","axios","headers","Session","then","response","setType","data","type","setSenderName","sender_name","setSenderEmail","sender_email","setStatus","setAmount","amount","setBalance","user","balance","setDate","createdAt","catch","error","getCartCount","callback","id","getUserId","length","getCart","setCart","getCartTotalAmount","arrCart","setTotalAmount","map","item","index","products","price"],"mappings":"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","sourcesContent":["import {NodeFetchHelper} from \"./NodeFetchHelper\";\nimport {SessionManager} from \"./SessionManager\";\n\nconst user_endpoint = 'localhost:2000/users/';\nconst product_endpoint = 'http://localhost:2000/products/categories';\nconst page_product_endpoint = 'http://localhost:2000/products/allData/categories';\n\nconst product_top = 'http://localhost:2000/orders/top';\nconst cart= 'http://localhost:2000/carts/byid';\n\nexport class Logics {\n    static getUser(setUser) {\n        NodeFetchHelper.get(user_endpoint, null, {\n            Authorization: \"Bearer \" + SessionManager.getAccessToken()\n        }, (status, jsonData, ok) => {\n            setUser(jsonData)\n\n        })\n    }\n\n    static getProduct(categories, setProduct) {\n        NodeFetchHelper.get(product_endpoint, {categories}, {\n            Authorization: 'Bearer ' + SessionManager.getAccessToken()\n        }, (status, jsonData, ok) => {\n\n            if (ok) {\n                setProduct(jsonData)\n            }\n        })\n    }\n\n    static getPaginatedProduct(categories, page, setProduct, setTotal) {\n        const limit = 4\n        const skip = (page - 1) * limit\n        console.log(limit)\n        console.log(skip)\n        NodeFetchHelper.get(page_product_endpoint, {categories, skip, limit}, {\n            Authorization: 'Bearer ' + SessionManager.getAccessToken()\n        }, (status, jsonData, ok) => {\n            console.log(jsonData)\n            if (ok) {\n                setProduct(jsonData[0].edges)\n                setTotal(Math.floor(jsonData[0].pageInfo[0].count / limit) + 1)\n\n            }\n\n        })\n    }\n\n    // static getTopProduct(categories, setProduct) {\n    //     NodeFetchHelper.get(product_top, {categories}, {\n    //         Authorization: 'Bearer ' + SessionManager.getAccessToken()\n    //     }, (status, jsonData, ok) => {\n    //         console.log(jsonData)\n    //         if (ok) {\n    //             setProduct(jsonData)\n    //         }\n    //     })\n    // }\n\n    static getTopProduct(categories, setProduct) {\n        axios.get(`http://localhost:2000/orders/top/${categories}`,{\n        headers: { Authorization:'Bearer '+Session.getAccessToken() }})\n.then((response)=>\n{\n    setType(response.data.type)\n    setSenderName(response.data.sender_name)\n    setSenderEmail(response.data.sender_email)\n    setStatus(response.data.status)\n    setAmount(response.data.amount)\n    setBalance(response.data.user.balance)\n    setDate(response.data.createdAt)\n    console.log('hello')\n})\n.catch((error)=>\n{\n    console.log(error)\n})\n        }\n\n    static getCartCount(callback){\n        let id=SessionManager.getUserId();\n        NodeFetchHelper.get(cart, {id}, {\n            Authorization: 'Bearer ' + SessionManager.getAccessToken()\n        }, (status, jsonData, ok) => {\n            console.log(\"after calling cart\", jsonData.length)\n            callback(jsonData.length)\n        })\n\n    }\n    static getCart(setCart){\n        let id=SessionManager.getUserId();\n        NodeFetchHelper.get(cart, {id}, {\n            Authorization: 'Bearer ' + SessionManager.getAccessToken()\n        }, (status, jsonData, ok) => {\n            if (ok) {\n                console.log(\"CArtdata\",jsonData)\n                setCart(jsonData)\n            }\n        })\n\n    }\n\n    static getCartTotalAmount(arrCart, setTotalAmount){\n        let count=0;\n        arrCart.map((item, index) => {\n            count= count+item.products.price * item.count;\n        })\n        setTotalAmount(count);\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}